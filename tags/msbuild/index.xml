<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MSBuild on Rasta Mouse</title>
    <link>https://rastamouse.me/tags/msbuild/</link>
    <description>Recent content in MSBuild on Rasta Mouse</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 26 Jun 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://rastamouse.me/tags/msbuild/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>The Return of Aggressor</title>
      <link>https://rastamouse.me/2019/06/the-return-of-aggressor/</link>
      <pubDate>Wed, 26 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rastamouse.me/2019/06/the-return-of-aggressor/</guid>
      <description>&lt;p&gt;FortyNorth Security recently &lt;a href=&#34;https://www.fortynorthsecurity.com/aggressive-msbuild-bypass-detection/&#34;&gt;posted an article&lt;/a&gt; detailing the process for leveraging MSBuild to execute unmanaged PowerShell, and automating it in Aggressor script for Cobalt Strike users.  Being a native binary in the Windows OS, the use of MSBuild is a &lt;a href=&#34;https://lolbas-project.github.io/lolbas/Binaries/Msbuild/&#34;&gt;common AWL bypass technique&lt;/a&gt;, which is handy in relatively well locked down environments.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TikiSpawn &amp; MSBuild</title>
      <link>https://rastamouse.me/2019/06/tikispawn-msbuild/</link>
      <pubDate>Thu, 13 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rastamouse.me/2019/06/tikispawn-msbuild/</guid>
      <description>&lt;p&gt;The main impetus behind this post was me experimenting with ways to leverage TikiSpawn with some of the popular &lt;a href=&#34;https://lolbas-project.github.io&#34;&gt;lolbins&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>